"use strict";function help(){console.log("queryConsumption(data, field, value, compType)"),console.log("// data - raw array"),console.log("// field - fieldname (date, or drug.name, drug.id)"),console.log("// value - comparison value"),console.log("// compType - EQ, GT, LT, GE, LE, INC"),console.log("----------------------------------"),console.log("// data - raw array"),console.log("// field - fieldname (ttime, etc.)"),console.log("// value - comparison value"),console.log("// compType - EQ, GT, LT, GE, LE, INC"),console.log("queryExperience(data, field, value, compType)"),console.log("----------------------------------"),console.log("intersect(data1, data2)"),console.log("----------------------------------"),console.log("// direction: -1 ASC, 1 DESC"),console.log("sortByField(data, field, direction)"),console.log("----------------------------------"),console.log("// experiences - data to break consumptions out of"),console.log("extractConsumptions(experiences)"),console.log("----------------------------------"),console.log("Example query to get total ethanol consumption since date:"),console.log("var consumptionsSinceDate = extractConsumptions(queryConsumption(fullData, 'date', 1451635200, 'GT'));var alcoholOnly = consumptionsSinceDate.filter(function(consumption) {    return consumption.drug.name == 'ethanol (spirit)';});var counts = [];alcoholOnly.forEach(function(consumption) {    counts.push(consumption.count);});var total = counts.reduce(function(accum, count) {    return accum + count;});console.log((Math.round(total * 10) / 10) + ' ' + alcoholOnly[0].drug.unit)")}function getKeyVal(o,n){var e=!1;return n.forEach(function(t){return e?void 0:o.hasOwnProperty(t)?void(o=o[t]):(console.log("Invalid key name "+t+" in array "+n.join(".")+" while searching data"),void(e=!0))}),e?void 0:o}function compute_EQ(o,n){return o===n}function compute_GT(o,n){return o>n}function compute_LT(o,n){return n>o}function compute_GE(o,n){return o>=n}function compute_LE(o,n){return n>=o}function compute_INC(o,n){return String(o).indexOf(String(n))>-1}function queryConsumption(o,n,e,t){var c=["count","date","experience_id","location","owner"],u=["method","drug"],r=[];return o.forEach(function(o,i){o.consumptions.forEach(function(o){if(c.indexOf(n)>-1)window["compute_"+t](o[n],e)&&r.indexOf(i)<0&&r.push(i);else{var a=n.split(".");u.indexOf(a[0])>-1?window["compute_"+t](o[a[0]][a[1]],e)&&r.indexOf(i)<0&&r.push(i):"friends"===a[0]?o.friends.forEach(function(o){window["compute_"+t](o[a[1]],e)&&r.indexOf(i)<0&&r.push(i)}):console.log("no such field.")}})}),fullData.filter(function(o,n){return r.indexOf(n)>-1})}function extractConsumptions(o){var n=[];return o.forEach(function(o){o.consumptions.forEach(function(o){n.push(o)})}),n}function queryExperience(o,n,e,t){var c=[];return o.forEach(function(o,n){window["compute_"+t](o[e],e)&&c.indexOf(n)<0&&c.push(n)}),fullData.filter(function(o,n){return c.indexOf(n)>-1})}function intersect(o,n){var e=[],t=[];return o.forEach(function(o){e.indexOf(o.id)<0&&t.push(o)}),n.forEach(function(o){e.indexOf(o.id)<0&&t.push(o)}),t}function sortByField(o,n,e){return o.sort(function(o,t){var c=o,u=t;return n.split(".").forEach(function(o){c=c[o],u=u[o]}),u>c?e:c>u?-1:0})}var fullData,results;makeAuthRequest("/experience/search","POST",null,"json",function(o,n,e){return 404===e?void Materialize.toast("No experiences",6e3,"danger-toast"):(n.sort(function(o,n){return parseFloat(n.date)-parseFloat(o.date)}),fullData=n,$("#status").html('Loaded! Accessible in <span style="font-family: monospace;">fullData</span>'),void $("#status").css("color","green"))}),console.log("use `help()` for more info");